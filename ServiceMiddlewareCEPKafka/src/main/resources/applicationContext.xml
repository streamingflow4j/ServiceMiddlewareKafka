<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:kafka.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- Definae consumer parameters -->
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="${group.id}" />
				<entry key="enable.auto.commit" value="${enable.auto.commit}" />
				<entry key="auto.commit.interval.ms" value="${auto.commit.interval.ms}" />
				<entry key="session.timeout.ms" value="${session.timeout.ms}" />
				<entry key="key.deserializer"
					value="org.apache.kafka.common.serialization.StringDeserializer" />
				<entry key="value.deserializer"
					value="org.springframework.kafka.support.serializer.JsonDeserializer" />
			</map>
		</constructor-arg>
	</bean>

	<!-- Create consumerFactory bean -->
	<bean id="consumerFactory"
		class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties" />
		</constructor-arg>
	</bean>

	<!-- Real class of messages consuming -->
	<bean id="messageListernerConsumerService" class="com.service.middleware.util.KafkaConsumerListener" />

	<!-- config of container of consumer -->
	<bean id="containerProperties_data"	class="org.springframework.kafka.listener.config.ContainerProperties">
		<constructor-arg>
			<list>
				<value>${queue.streaming.data}</value>
				<value>${queue.rule.cep}</value>
			</list>
		</constructor-arg>
		<property name="messageListener" ref="messageListernerConsumerService" />
	</bean>

	<!-- create messageListenerContainer bean -->
	<bean id="messageListenerContainer_data" class="org.springframework.kafka.listener.KafkaMessageListenerContainer"
		init-method="doStart">
		<constructor-arg ref="consumerFactory" />
		<constructor-arg ref="containerProperties_data" />
	</bean>

	<!-- KAFKA POST_DATA -->
	<bean id="template" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg>
			<bean class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
				<constructor-arg>
					<map>
						<entry key="bootstrap.servers" value="${bootstrap.servers}" />
                        <entry key="group.id" value="${group.id}" />
                        <entry key="retries" value="${retries}" />
                        <entry key="batch.size" value="${batch.size}" />
                        <entry key="linger.ms" value="${linger.ms}" />
                        <entry key="buffer.memory" value="${buffer.memory}" />
						<entry key="key.serializer" value="org.apache.kafka.common.serialization.StringSerializer" />
						<entry key="value.serializer" value="org.springframework.kafka.support.serializer.JsonSerializer" />
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<!-- legacy code -->
	<bean class="com.service.middleware.util.ApplicationContextProvider" />
	<bean id="monitorEventHandler" class="com.service.middleware.cep.handler.MonitorEventHandler" />
	<bean id="monitorEventSubscriber" class="com.service.middleware.cep.subscribe.MonitorEventSubscriber" />


</beans>
